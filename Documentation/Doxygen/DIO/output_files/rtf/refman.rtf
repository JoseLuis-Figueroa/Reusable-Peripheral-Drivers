{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment Digital Input/Output Reusable Driver  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
v1.1 \par
}}Digital Input/Output Reusable Driver}
{\comment Generated by doxygen 1.13.2.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Digital Input/Output Reusable Driver}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version v1.1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Digital Input/Output (DIO) Reusable Driver - Version 1.1\par \pard\plain 
{\tc\tcl1 \v Digital Input/Output (DIO) Reusable Driver - Version 1.1}
{\xe \v Digital Input/Output (DIO) Reusable Driver - Version 1.1}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Introduction
\par}
{\tc\tcl2 \v Introduction}
This project is a personal initiative aimed at developing reusable firmware components for microcontroller platforms. It focuses on a modular and efficient General-Purpose Input/Output (GPIO) driver referred as the Digital Input/Output (DIO) driver on the documentation that can be easily adapted across various microcontroller families.\par}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Version History
\par}
{\tc\tcl2 \v Version History}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b v1.0} : Initial release\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b v1.1} : Updated documentation, structural improvements and design by contract.\par}
\par
\par}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Software Architecture
\par}
{\tc\tcl2 \v Software Architecture}
The software architecture follows a layered approach. This design pattern separates low-level code (drivers or HALs), and application-specific code. A layered architecture promotes reusability and simplifies the portability between different applications or microcontrollers. The layered architecture can be seen in figure 1 and contains a driver and application layer operating on the hardware.\par
{\qc  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b Application Layer}   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b Driver Layer}   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b Hardware}   \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
{\i Figure 1: Layered Software Architecture}  } \par
The {\b Driver Layer}  provides all necessary low-level code to initialize and control hardware peripherals (e.g., GPIO pins, sensors, buttons). \par
 The {\b Application Layer}  contains no direct hardware manipulation but instead interacts with hardware through the exposed driver interfaces. This abstraction improves maintainability and facilitates hardware migration.\par}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coding Standards
\par}
{\tc\tcl2 \v Coding Standards}
The code is developed using a bare-metal approach and complies with industry-standard guidelines, particularly {\b MISRA-C} . Best practices in naming, formatting, documentation, and modular design are followed to ensure reliability and maintainability.\par}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project Description
\par}
{\tc\tcl2 \v Project Description}
This demonstration configures the {\b user button (PC13)}  as an input. When pressed:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The {\b on-board LED (PA5)}  turns on.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The {\b external yellow LED (PB0)}  turns off via direct manipulation of the {\b ODR register} .\par}
\par
When released:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The on-board LED turns off.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The yellow LED turns on.\par}
\par
Additionally:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The {\b red LED (PA0)}  toggles (no delay implemented yet; behavior observable during debugging).\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The state of {\b PC13}  is read directly from the {\b IDR register} , and status messages are printed to the console accordingly.\par}
\par
\par}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project Goals
\par}
{\tc\tcl2 \v Project Goals}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Provide a reusable GPIO driver for embedded applications.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Ensure portability across different microcontroller platforms.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Maintain compliance with professional coding standards (MISRA-C).\par}
\par
\par}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Development Tools
\par}
{\tc\tcl2 \v Development Tools}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b Development Board} : STM32 Nucleo-F401RE. \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b IDE/Debugger} : Visual Studio Code with PlatformIO extension.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b Toolchain} : GNU ARM Embedded Toolchain.\par}
\par
\par}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Usage & Documentation
\par}
{\tc\tcl2 \v Usage & Documentation}
The project is fully documented using Doxygen. Inline comments offer detailed insights into function behavior and usage. The generated Doxygen documentation provides a structured and navigable reference for all code modules and components.\par}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Glossary
\par}
{\tc\tcl2 \v Glossary}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b GPIO} : General-Purpose Input/Output. \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b DIO} : Digital Input/Output. \par}
\par
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b DioConfig_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DioPinConfig_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/{\b dio.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The interface definition for the DIO. This is the header file for the definition of the interface for a digital input/output peripheral on a standard microcontroller })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/{\b dio_cfg.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains interface definitions for the Dio configuration. This is the header file for the definition of the interface for retrieving the digital input/output configuration table })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/{\b dio.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The implementation for the DIO driver })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/{\b dio_cfg.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains the implementation for the digital input/output peripheral configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement the DIO driver })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DioConfig_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v DioConfig_t}
{\xe \v DioConfig_t}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
{
{\f2 #include <dio_cfg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPort_t} {\b Port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPin_t} {\b Pin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioMode_t} {\b Mode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioType_t} {\b Type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioSpeed_t} {\b Speed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioResistor_t} {\b Resistor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioFunction_t} {\b Function}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the digital input/output configuration table's elements that are used by Dio_Init to configure the Dio peripheral. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Function\:DioConfig_t}
{\xe \v DioConfig_t\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioFunction_t} Function}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mux Function - Dio_Peri_Select \par
}}
{\xe \v Mode\:DioConfig_t}
{\xe \v DioConfig_t\:Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioMode_t} Mode}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input, Output, Function, or Analog \par
}}
{\xe \v Pin\:DioConfig_t}
{\xe \v DioConfig_t\:Pin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPin_t} Pin}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The I/O pin \par
}}
{\xe \v Port\:DioConfig_t}
{\xe \v DioConfig_t\:Port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPort_t} Port}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The I/O port \par
}}
{\xe \v Resistor\:DioConfig_t}
{\xe \v DioConfig_t\:Resistor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioResistor_t} Resistor}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enabled or Disabled \par
}}
{\xe \v Speed\:DioConfig_t}
{\xe \v DioConfig_t\:Speed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioSpeed_t} Speed}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low, Medium, High, very \par
}}
{\xe \v Type\:DioConfig_t}
{\xe \v DioConfig_t\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioType_t} Type}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Push-pull or Open-drain \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/{\b dio_cfg.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DioPinConfig_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v DioPinConfig_t}
{\xe \v DioPinConfig_t}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPort_t} {\b Port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPin_t} {\b Pin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Pin\:DioPinConfig_t}
{\xe \v DioPinConfig_t\:Pin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPin_t} Pin}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The I/O pin \par
}}
{\xe \v Port\:DioPinConfig_t}
{\xe \v DioPinConfig_t\:Port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPort_t} Port}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The I/O port \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/{\b dio.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio.h}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The interface definition for the DIO. This is the header file for the definition of the interface for a digital input/output peripheral on a standard microcontroller. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <assert.h>}\par
{\f2 #include "dio_cfg.h"}\par
{\f2 #include "stm32f4xx.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dio.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DioPinConfig_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_init} (const {\b DioConfig_t} *const Config, size_t configSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPinState_t} {\b DIO_pinRead} (const {\b DioPinConfig_t} *const PinConfig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_pinWrite} (const {\b DioPinConfig_t} *const PinConfig, {\b DioPinState_t} State)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_pinToggle} (const {\b DioPinConfig_t} *const PinConfig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_registerWrite} (uint32_t address, uint32_t value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b DIO_registerRead} (uint32_t address)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The interface definition for the DIO. This is the header file for the definition of the interface for a digital input/output peripheral on a standard microcontroller. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jose Luis Figueroa \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2023-03-04\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright (c) 2023 Jose Luis Figueroa. MIT License. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DIO_init\:dio.h}
{\xe \v dio.h\:DIO_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_init (const {\b DioConfig_t} *const Config, size_t configSize)}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to initialize the DIO based on the configuration \par
 table defined in dio_cfg module.\par
PRE-CONDITION: The MCU clocks must be configured and enabled. \par
 PRE-CONDITION: Configuration table needs to be populated (sizeof > 0) \par
 PRE-CONDITION: NUMBER_OF_PORTS > 0 \par
 PRE-CONDITION: The setting is within the maximum values (DIO_MAX). \par
POST-CONDITION: The DIO peripheral is set up with the configuration settings.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i Config} \cell }{is a pointer to the configuration table that contains the initialization for the peripheral. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i configSize} \cell }{is the size of the configuration table.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_ConfigType_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinRead\:dio.h}
{\xe \v dio.h\:DIO_pinRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPinState_t} DIO_pinRead (const {\b DioPinConfig_t} *const PinConfig)}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to reads the state of a specified pin. This function reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure, which contains the port and pin information.\par
PRE-CONDITION: The pin is configured as INPUT \par
 PRE-CONDITION: The pin is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. definition. \par
POST-CONDITION: The channel state is returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i PinConfig} \cell }{A pointer to a structure containing the port and pin to be read.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DioPinState_t} The state of the pin (high or low).\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserButton1= \par
\{\par
     .Port = DIO_PC, \par
     .Pin = DIO_PC13\par
\};\par
 {\cf18 bool} pin = DIO_pinRead(&UserButton1);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinToggle\:dio.h}
{\xe \v dio.h\:DIO_pinToggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_pinToggle (const {\b DioPinConfig_t} *const PinConfig)}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to toggle the current state of a pin. This function reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure, which contains the port and pin information.\par
PRE-CONDITION: The channel is configured as output \par
 PRE-CONDITION: The channel is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. \par
POST-CONDITION: The channel state is toggled. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pinConfig} \cell }{A pointer to a structure containing the port and pin to be toggled.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserLED1= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA5\par
\};\par
DIO_pinToggle(&UserLED1);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinWrite\:dio.h}
{\xe \v dio.h\:DIO_pinWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_pinWrite (const {\b DioPinConfig_t} *const PinConfig, {\b DioPinState_t} State)}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to write the state of a pin as either logic high or low. it reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure and the {\b DioPinState_t} to define the desired state, which contains the port and pin information.\par
PRE-CONDITION: The pin is configured as OUTPUT \par
 PRE-CONDITION: The pin is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. \par
 PRE-CONDITION: The State is within the maximum {\b DioPinState_t}. \par
POST-CONDITION: The channel state is Stated. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pinConfig} \cell }{A pointer to a structure containing the port and pin to be written. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i State} \cell }{is HIGH or LOW as defined in the {\b DioPinState_t} enum.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserLED1= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA5\par
\};\par
{\cf17 const} DioPinConfig_t  UserLED2= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA6\par
\};\par
DIO_pinWrite(&UserLED1, LOW);    {\cf20 //Set the pin low}\par
DIO_pinWrite(&UserLED2, HIGH);   {\cf20 //Set the pin high}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_registerRead\:dio.h}
{\xe \v dio.h\:DIO_registerRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t DIO_registerRead (uint32_t address)}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to directly address a Dio register. The function should be used to access specialized functionality in the Dio peripheral that is not exposed by any other function of the interface.\par
PRE-CONDITION: Address is within the boundaries of the Dio register address space. \par
POST-CONDITION: The value stored in the register is returned to the caller. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{is the address of the Dio register to read.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The current value of the Dio register.\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid type dioValue = DIO_registerRead(0x1000);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_registerWrite\:dio.h}
{\xe \v dio.h\:DIO_registerWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_registerWrite (uint32_t address, uint32_t value)}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to directly address and modify a GPIO register. The function should be used to access specialized functionality in the DIO peripheral that is not exposed by any other function of the interface.\par
PRE-CONDITION: Address is within the boundaries of the DIO register address space. \par
POST-CONDITION: The register located at address with be updated with value. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{is a register address within the DIO peripheral map. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{is the value to set the DIO register.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid DIO_registerWrite(0x1000, 0x15);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dio.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio.h}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef DIO_H_}\par
14 {\cf21 #define DIO_H_}\par
15 \par
16 {\cf20 /*****************************************************************************}\par
17 {\cf20 * Includes}\par
18 {\cf20 *****************************************************************************/}\par
19 {\cf21 #include <stdint.h>}\par
20 {\cf21 #include <stdio.h>}\par
21 {\cf20 //#define NDEBUG          /*To disable assert function*/  }\par
22 {\cf21 #include <assert.h>}\par
23 {\cf21 #include "dio_cfg.h"}    {\cf20 /*For dio configuration*/}\par
24 {\cf21 #include "stm32f4xx.h"}  {\cf20 /*Microcontroller family header*/}  \par
25 \par
26 {\cf20 /*****************************************************************************}\par
27 {\cf20 * Preprocessor Constants}\par
28 {\cf20 *****************************************************************************/}\par
29 \par
30 {\cf20 /*****************************************************************************}\par
31 {\cf20 * Configuration Constants}\par
32 {\cf20 *****************************************************************************/}\par
33 \par
34 {\cf20 /*****************************************************************************}\par
35 {\cf20 * Macros}\par
36 {\cf20 *****************************************************************************/}\par
37 \par
38 {\cf20 /*****************************************************************************}\par
39 {\cf20 * Typedefs}\par
40 {\cf20 *****************************************************************************/}\par
41 {\cf17 typedef} {\cf17 struct}\par
42 \{\par
43     DioPort_t Port;             \par
44     DioPin_t Pin;               \par
45 \}DioPinConfig_t;\par
46 \par
47 {\cf20 /*****************************************************************************}\par
48 {\cf20 * Variables}\par
49 {\cf20 *****************************************************************************/}\par
50 \par
51 {\cf20 /*****************************************************************************}\par
52 {\cf20 * Function Prototypes}\par
53 {\cf20 *****************************************************************************/}\par
54 {\cf21 #ifdef __cplusplus}\par
55 {\cf17 extern} {\cf22 "C"}\{\par
56 {\cf21 #endif}\par
57 \par
58 {\cf18 void} DIO_init({\cf17 const} DioConfig_t * {\cf17 const} Config, {\cf18 size_t} configSize);\par
59 DioPinState_t DIO_pinRead({\cf17 const} DioPinConfig_t * {\cf17 const} PinConfig);\par
60 {\cf18 void} DIO_pinWrite({\cf17 const} DioPinConfig_t * {\cf17 const} PinConfig, DioPinState_t State);\par
61 {\cf18 void} DIO_pinToggle({\cf17 const} DioPinConfig_t * {\cf17 const} PinConfig);\par
62 {\cf18 void} DIO_registerWrite(uint32_t address, uint32_t value);\par
63 uint32_t DIO_registerRead(uint32_t address);\par
64 \par
65 {\cf21 #ifdef __cplusplus}\par
66 \} {\cf20 // extern C}\par
67 {\cf21 #endif}\par
68 \par
69 {\cf21 #endif }{\cf20 /*DIO_H_*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio_cfg.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio_cfg.h}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio_cfg.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains interface definitions for the Dio configuration. This is the header file for the definition of the interface for retrieving the digital input/output configuration table. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dio_cfg.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio__cfg_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio__cfg_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DioConfig_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUMBER_OF_PORTS}\~ 5U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioPinState_t} \{ {\b DIO_LOW}
, {\b DIO_HIGH}
, {\b DIO_PIN_STATE_MAX}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioPort_t} \{ {\b DIO_PA}
, {\b DIO_PB}
, {\b DIO_PC}
, {\b DIO_PD}
, {\b DIO_PH}
, {\b DIO_MAX_PORT}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioPin_t} \{ {\b DIO_PA0}
, {\b DIO_PA1}
, {\b DIO_PA2}
, {\b DIO_PA3}
, {\b DIO_PA4}
, {\b DIO_PA5}
, {\b DIO_PA6}
, {\b DIO_PA7}
, {\b DIO_PA8}
, {\b DIO_PA9}
, {\b DIO_PA10}
, {\b DIO_PA11}
, {\b DIO_PA12}
, {\b DIO_PA13}
, {\b DIO_PA14}
, {\b DIO_PA15}
, {\b DIO_PB0} = 0
, {\b DIO_PB1}
, {\b DIO_PB2}
, {\b DIO_PB3}
, {\b DIO_PB4}
, {\b DIO_PB5}
, {\b DIO_PB6}
, {\b DIO_PB7}
, {\b DIO_PB8}
, {\b DIO_PB9}
, {\b DIO_PB10}
, {\b DIO_PB12} = 12
, {\b DIO_PB13}
, {\b DIO_PB14}
, {\b DIO_PB15}
, {\b DIO_PC0} = 0
, {\b DIO_PC1}
, {\b DIO_PC2}
, {\b DIO_PC3}
, {\b DIO_PC4}
, {\b DIO_PC5}
, {\b DIO_PC6}
, {\b DIO_PC7}
, {\b DIO_PC8}
, {\b DIO_PC9}
, {\b DIO_PC10}
, {\b DIO_PC11}
, {\b DIO_PC12}
, {\b DIO_PC13}
, {\b DIO_PC14}
, {\b DIO_PC15}
, {\b DIO_PD2} = 2
, {\b DIO_PH0} = 0
, {\b DIO_PH1}
, {\b DIO_MAX_PIN} = 16
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioMode_t} \{ {\b DIO_INPUT}
, {\b DIO_OUTPUT}
, {\b DIO_FUNCTION}
, {\b DIO_ANALOG}
, {\b DIO_MAX_MODE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioType_t} \{ {\b DIO_PUSH_PULL}
, {\b DIO_OPEN_DRAIN}
, {\b DIO_MAX_TYPE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioSpeed_t} \{ {\b DIO_LOW_SPEED}
, {\b DIO_MEDIUM_SPEED}
, {\b DIO_HIGH_SPEED}
, {\b DIO_VERY_SPEED}
, {\b DIO_MAX_SPEED}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioResistor_t} \{ {\b DIO_NO_RESISTOR}
, {\b DIO_PULLUP}
, {\b DIO_PULLDOWN}
, {\b DIO_MAX_RESISTOR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DioFunction_t} \{ {\b DIO_AF0}
, {\b DIO_AF1}
, {\b DIO_AF2}
, {\b DIO_AF3}
, {\b DIO_AF4}
, {\b DIO_AF5}
, {\b DIO_AF6}
, {\b DIO_AF7}
, {\b DIO_AF8}
, {\b DIO_AF9}
, {\b DIO_AF10}
, {\b DIO_AF11}
, {\b DIO_AF12}
, {\b DIO_AF13}
, {\b DIO_AF14}
, {\b DIO_AF15}
, {\b DIO_MAX_FUNCTION}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b DioConfig_t} *const {\b DIO_configGet} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b DIO_configSizeGet} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains interface definitions for the Dio configuration. This is the header file for the definition of the interface for retrieving the digital input/output configuration table. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jose Luis Figueroa \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025-03-04\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright (c) 2025 Jose Luis Figueroa. MIT License. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v NUMBER_OF_PORTS\:dio_cfg.h}
{\xe \v dio_cfg.h\:NUMBER_OF_PORTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUMBER_OF_PORTS\~ 5U}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the number of ports on the processor. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v DioFunction_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioFunction_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioFunction_t}}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the possible DIO alternate function. A multiplexer is used to select the alternate function \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_AF0\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF0{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 0 \par
}\cell }{\row }
{\xe \v DIO_AF1\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF1{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 1 \par
}\cell }{\row }
{\xe \v DIO_AF2\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF2{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 2 \par
}\cell }{\row }
{\xe \v DIO_AF3\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF3}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF3{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 3 \par
}\cell }{\row }
{\xe \v DIO_AF4\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF4}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF4{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 4 \par
}\cell }{\row }
{\xe \v DIO_AF5\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF5}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF5{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 5 \par
}\cell }{\row }
{\xe \v DIO_AF6\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF6}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF6{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 6 \par
}\cell }{\row }
{\xe \v DIO_AF7\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF7}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF7{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 7 \par
}\cell }{\row }
{\xe \v DIO_AF8\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF8}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF8{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 8 \par
}\cell }{\row }
{\xe \v DIO_AF9\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF9}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF9{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 9 \par
}\cell }{\row }
{\xe \v DIO_AF10\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF10}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF10{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 10 \par
}\cell }{\row }
{\xe \v DIO_AF11\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF11}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF11{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 11 \par
}\cell }{\row }
{\xe \v DIO_AF12\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF12}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF12{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 12 \par
}\cell }{\row }
{\xe \v DIO_AF13\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF13}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF13{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 13 \par
}\cell }{\row }
{\xe \v DIO_AF14\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF14}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF14{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 14 \par
}\cell }{\row }
{\xe \v DIO_AF15\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_AF15}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_AF15{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function 15 \par
}\cell }{\row }
{\xe \v DIO_MAX_FUNCTION\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_FUNCTION}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_FUNCTION{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum function value \par
}\cell }{\row }
}
}
{\xe \v DioMode_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioMode_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioMode_t}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the mode of the Dio pin as an input, output, alternate function and analog. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_INPUT\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_INPUT}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_INPUT{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input mode \par
}\cell }{\row }
{\xe \v DIO_OUTPUT\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_OUTPUT}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_OUTPUT{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
General purpose Output mode \par
}\cell }{\row }
{\xe \v DIO_FUNCTION\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_FUNCTION}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_FUNCTION{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alternate function mode \par
}\cell }{\row }
{\xe \v DIO_ANALOG\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_ANALOG}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_ANALOG{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog mode \par
}\cell }{\row }
{\xe \v DIO_MAX_MODE\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_MODE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_MODE{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum mode \par
}\cell }{\row }
}
}
{\xe \v DioPin_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioPin_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioPin_t}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines all the pins contained on the MCU device. It is used to set a specific bit on the ports. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_PA0\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA0{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA0 \par
}\cell }{\row }
{\xe \v DIO_PA1\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA1{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA1 \par
}\cell }{\row }
{\xe \v DIO_PA2\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA2{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA2 \par
}\cell }{\row }
{\xe \v DIO_PA3\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA3}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA3{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA3 \par
}\cell }{\row }
{\xe \v DIO_PA4\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA4}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA4{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA4 \par
}\cell }{\row }
{\xe \v DIO_PA5\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA5}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA5{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA5 \par
}\cell }{\row }
{\xe \v DIO_PA6\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA6}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA6{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA6 \par
}\cell }{\row }
{\xe \v DIO_PA7\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA7}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA7{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA7 \par
}\cell }{\row }
{\xe \v DIO_PA8\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA8}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA8{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA8 \par
}\cell }{\row }
{\xe \v DIO_PA9\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA9}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA9{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA9 \par
}\cell }{\row }
{\xe \v DIO_PA10\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA10}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA10{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA10 \par
}\cell }{\row }
{\xe \v DIO_PA11\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA11}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA11{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA11 \par
}\cell }{\row }
{\xe \v DIO_PA12\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA12}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA12{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA12 \par
}\cell }{\row }
{\xe \v DIO_PA13\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA13}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA13{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA13 SWD (NC) \par
}\cell }{\row }
{\xe \v DIO_PA14\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA14}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA14{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA14 SWD (NC) \par
}\cell }{\row }
{\xe \v DIO_PA15\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA15}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA15{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PA15 \par
}\cell }{\row }
{\xe \v DIO_PB0\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB0{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB0 \par
}\cell }{\row }
{\xe \v DIO_PB1\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB1{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB1 \par
}\cell }{\row }
{\xe \v DIO_PB2\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB2{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB2 \par
}\cell }{\row }
{\xe \v DIO_PB3\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB3}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB3{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB3 \par
}\cell }{\row }
{\xe \v DIO_PB4\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB4}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB4{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB4 \par
}\cell }{\row }
{\xe \v DIO_PB5\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB5}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB5{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB5 \par
}\cell }{\row }
{\xe \v DIO_PB6\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB6}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB6{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB6 \par
}\cell }{\row }
{\xe \v DIO_PB7\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB7}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB7{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB7 \par
}\cell }{\row }
{\xe \v DIO_PB8\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB8}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB8{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB8 \par
}\cell }{\row }
{\xe \v DIO_PB9\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB9}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB9{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB9 \par
}\cell }{\row }
{\xe \v DIO_PB10\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB10}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB10{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB10 \par
}\cell }{\row }
{\xe \v DIO_PB12\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB12}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB12{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB12 \par
}\cell }{\row }
{\xe \v DIO_PB13\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB13}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB13{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB13 \par
}\cell }{\row }
{\xe \v DIO_PB14\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB14}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB14{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB14 \par
}\cell }{\row }
{\xe \v DIO_PB15\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB15}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB15{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PB15 \par
}\cell }{\row }
{\xe \v DIO_PC0\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC0{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC0 \par
}\cell }{\row }
{\xe \v DIO_PC1\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC1{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC1 \par
}\cell }{\row }
{\xe \v DIO_PC2\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC2{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC2 \par
}\cell }{\row }
{\xe \v DIO_PC3\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC3}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC3{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC3 \par
}\cell }{\row }
{\xe \v DIO_PC4\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC4}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC4{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC4 \par
}\cell }{\row }
{\xe \v DIO_PC5\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC5}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC5{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC5 \par
}\cell }{\row }
{\xe \v DIO_PC6\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC6}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC6{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC6 \par
}\cell }{\row }
{\xe \v DIO_PC7\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC7}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC7{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC7 \par
}\cell }{\row }
{\xe \v DIO_PC8\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC8}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC8{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC8 \par
}\cell }{\row }
{\xe \v DIO_PC9\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC9}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC9{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC9 \par
}\cell }{\row }
{\xe \v DIO_PC10\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC10}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC10{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC10 \par
}\cell }{\row }
{\xe \v DIO_PC11\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC11}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC11{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC11 \par
}\cell }{\row }
{\xe \v DIO_PC12\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC12}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC12{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC12 \par
}\cell }{\row }
{\xe \v DIO_PC13\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC13}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC13{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC13 Push button \par
}\cell }{\row }
{\xe \v DIO_PC14\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC14}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC14{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC14 OSC32_IN \par
}\cell }{\row }
{\xe \v DIO_PC15\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC15}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC15{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PC15 OSC32_OUT \par
}\cell }{\row }
{\xe \v DIO_PD2\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PD2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PD2{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PD2 \par
}\cell }{\row }
{\xe \v DIO_PH0\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PH0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PH0{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PH0 OSC_IN \par
}\cell }{\row }
{\xe \v DIO_PH1\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PH1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PH1{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PH1 OSC_OUT \par
}\cell }{\row }
{\xe \v DIO_MAX_PIN\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_PIN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_PIN{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum pin value \par
}\cell }{\row }
}
}
{\xe \v DioPinState_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioPinState_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioPinState_t}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the possible states for a digital output pin. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_LOW\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_LOW}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_LOW{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines digital state ground \par
}\cell }{\row }
{\xe \v DIO_HIGH\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_HIGH}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_HIGH{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines digital state power \par
}\cell }{\row }
{\xe \v DIO_PIN_STATE_MAX\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PIN_STATE_MAX}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PIN_STATE_MAX{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum digital state \par
}\cell }{\row }
}
}
{\xe \v DioPort_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioPort_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioPort_t}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the ports contained on the MCU device. It is used to identify the specific port GPIO to configure the register map. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_PA\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PA}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PA{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port A \par
}\cell }{\row }
{\xe \v DIO_PB\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PB}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PB{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port B \par
}\cell }{\row }
{\xe \v DIO_PC\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PC}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PC{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port C \par
}\cell }{\row }
{\xe \v DIO_PD\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PD}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PD{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port D \par
}\cell }{\row }
{\xe \v DIO_PH\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PH}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PH{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port H \par
}\cell }{\row }
{\xe \v DIO_MAX_PORT\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_PORT}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_PORT{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum Port \par
}\cell }{\row }
}
}
{\xe \v DioResistor_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioResistor_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioResistor_t}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the possible states of the channel pull-ups. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_NO_RESISTOR\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_NO_RESISTOR}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_NO_RESISTOR{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to disable the internal resistor \par
}\cell }{\row }
{\xe \v DIO_PULLUP\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PULLUP}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PULLUP{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to enable the internal pull-up \par
}\cell }{\row }
{\xe \v DIO_PULLDOWN\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PULLDOWN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PULLDOWN{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to enable the internal pull-down \par
}\cell }{\row }
{\xe \v DIO_MAX_RESISTOR\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_RESISTOR}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_RESISTOR{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum resistor value \par
}\cell }{\row }
}
}
{\xe \v DioSpeed_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioSpeed_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioSpeed_t}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the output speed settings available \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_LOW_SPEED\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_LOW_SPEED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_LOW_SPEED{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Low speed is configured on the pin \par
}\cell }{\row }
{\xe \v DIO_MEDIUM_SPEED\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MEDIUM_SPEED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MEDIUM_SPEED{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Medium speed is configured on the pin \par
}\cell }{\row }
{\xe \v DIO_HIGH_SPEED\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_HIGH_SPEED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_HIGH_SPEED{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High speed is configured on the pin \par
}\cell }{\row }
{\xe \v DIO_VERY_SPEED\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_VERY_SPEED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_VERY_SPEED{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Very speed is configured on the pin \par
}\cell }{\row }
{\xe \v DIO_MAX_SPEED\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_SPEED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_SPEED{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum output speed \par
}\cell }{\row }
}
}
{\xe \v DioType_t\:dio_cfg.h}
{\xe \v dio_cfg.h\:DioType_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DioType_t}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define the output type of the Input/output port. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIO_PUSH_PULL\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_PUSH_PULL}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_PUSH_PULL{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable output push-pull \par
}\cell }{\row }
{\xe \v DIO_OPEN_DRAIN\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_OPEN_DRAIN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_OPEN_DRAIN{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable output open-drain \par
}\cell }{\row }
{\xe \v DIO_MAX_TYPE\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_MAX_TYPE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid DIO_MAX_TYPE{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the maximum output type \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DIO_configGet\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_configGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b DioConfig_t} *const DIO_configGet (void )}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to initialize the DIO based on the configuration table defined in dio_cfg module.\par
PRE-CONDITION: configuration table needs to be populated (sizeof > 0) \par
POST-CONDITION: A constant pointer to the first member of the \par
 configuration table will be returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the configuration table. \par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_Config_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
DIO_channelRead \par
DIO_channelWrite \par
DIO_channelToggle \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_configSizeGet\:dio_cfg.h}
{\xe \v dio_cfg.h\:DIO_configSizeGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t DIO_configSizeGet (void )}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to get the size of the configuration table.\par
PRE-CONDITION: configuration table needs to be populated (sizeof > 0) \par
POST-CONDITION: The size of the configuration table will be returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The size of the configuration table.\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_Config_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
DIO_channelRead \par
DIO_channelWrite \par
DIO_channelToggle \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dio_cfg.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio_cfg.h}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/include/dio_cfg.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
13 {\cf21 #ifndef DIO_CFG_H_}\par
14 {\cf21 #define DIO_CFG_H_}\par
15 \par
16 {\cf20 /*****************************************************************************}\par
17 {\cf20 * Includes}\par
18 {\cf20 *****************************************************************************/}\par
19 {\cf21 #include <stdio.h>}\par
20 \par
21 {\cf20 /*****************************************************************************}\par
22 {\cf20 * Preprocessor Constants}\par
23 {\cf20 *****************************************************************************/}\par
27 {\cf21 #define NUMBER_OF_PORTS 5U}\par
28 \par
29 {\cf20 /*****************************************************************************}\par
30 {\cf20 * Typedefs}\par
31 {\cf20 *****************************************************************************/}\par
35 {\cf17 typedef} {\cf17 enum}\par
36 \{\par
37     DIO_LOW,            \par
38     DIO_HIGH,           \par
39     DIO_PIN_STATE_MAX   \par
40 \}DioPinState_t;\par
41 \par
46 {\cf17 typedef} {\cf17 enum}\par
47 \{\par
48     DIO_PA,         \par
49     DIO_PB,         \par
50     DIO_PC,         \par
51     DIO_PD,         \par
52     DIO_PH,         \par
53     DIO_MAX_PORT    \par
54 \}DioPort_t;\par
55 \par
56 \par
61 {\cf17 typedef} {\cf17 enum}\par
62 \{\par
63     DIO_PA0,        \par
64     DIO_PA1,        \par
65     DIO_PA2,        \par
66     DIO_PA3,        \par
67     DIO_PA4,        \par
68     DIO_PA5,        \par
69     DIO_PA6,        \par
70     DIO_PA7,        \par
71     DIO_PA8,        \par
72     DIO_PA9,        \par
73     DIO_PA10,       \par
74     DIO_PA11,       \par
75     DIO_PA12,       \par
76     DIO_PA13,       \par
77     DIO_PA14,       \par
78     DIO_PA15,       \par
79     DIO_PB0 = 0,    \par
80     DIO_PB1,        \par
81     DIO_PB2,        \par
82     DIO_PB3,        \par
83     DIO_PB4,        \par
84     DIO_PB5,        \par
85     DIO_PB6,        \par
86     DIO_PB7,        \par
87     DIO_PB8,        \par
88     DIO_PB9,        \par
89     DIO_PB10,       \par
90     DIO_PB12 = 12,   \par
91     DIO_PB13,       \par
92     DIO_PB14,       \par
93     DIO_PB15,       \par
94     DIO_PC0 = 0,    \par
95     DIO_PC1,        \par
96     DIO_PC2,        \par
97     DIO_PC3,        \par
98     DIO_PC4,        \par
99     DIO_PC5,        \par
100     DIO_PC6,        \par
101     DIO_PC7,        \par
102     DIO_PC8,        \par
103     DIO_PC9,        \par
104     DIO_PC10,       \par
105     DIO_PC11,       \par
106     DIO_PC12,       \par
107     DIO_PC13,       \par
108     DIO_PC14,       \par
109     DIO_PC15,       \par
110     DIO_PD2 = 2,    \par
111     DIO_PH0 = 0,    \par
112     DIO_PH1,        \par
113     DIO_MAX_PIN = 16\par
114 \}DioPin_t;\par
115 \par
120 {\cf17 typedef} {\cf17 enum}\par
121 \{\par
122     DIO_INPUT,      \par
123     DIO_OUTPUT,     \par
124     DIO_FUNCTION,   \par
125     DIO_ANALOG,     \par
126     DIO_MAX_MODE    \par
127 \}DioMode_t;\par
128 \par
132 {\cf17 typedef} {\cf17 enum}\par
133 \{\par
134     DIO_PUSH_PULL,              \par
135     DIO_OPEN_DRAIN,     \par
136     DIO_MAX_TYPE        \par
137 \}DioType_t;\par
138 \par
142 {\cf17 typedef} {\cf17 enum}\par
143 \{\par
144     DIO_LOW_SPEED,      \par
145     DIO_MEDIUM_SPEED,   \par
146     DIO_HIGH_SPEED,     \par
147     DIO_VERY_SPEED,     \par
148     DIO_MAX_SPEED       \par
149 \}DioSpeed_t;\par
150 \par
154 {\cf17 typedef} {\cf17 enum}\par
155 \{\par
156     DIO_NO_RESISTOR,    \par
157     DIO_PULLUP,         \par
158     DIO_PULLDOWN,       \par
159     DIO_MAX_RESISTOR    \par
160 \}DioResistor_t;\par
161 \par
166 {\cf17 typedef} {\cf17 enum}\par
167 \{\par
168     DIO_AF0,        \par
169     DIO_AF1,        \par
170     DIO_AF2,        \par
171     DIO_AF3,        \par
172     DIO_AF4,        \par
173     DIO_AF5,        \par
174     DIO_AF6,        \par
175     DIO_AF7,        \par
176     DIO_AF8,        \par
177     DIO_AF9,        \par
178     DIO_AF10,       \par
179     DIO_AF11,       \par
180     DIO_AF12,       \par
181     DIO_AF13,       \par
182     DIO_AF14,       \par
183     DIO_AF15,       \par
184     DIO_MAX_FUNCTION\par
185 \}DioFunction_t;\par
186 \par
191 {\cf17 typedef} {\cf17 struct }\par
192 \{\par
193     DioPort_t Port;             \par
194     DioPin_t Pin;               \par
195     DioMode_t Mode;             \par
196     DioType_t Type;             \par
197     DioSpeed_t Speed;           \par
198     DioResistor_t Resistor;     \par
199     DioFunction_t Function;     \par
200 \}DioConfig_t;\par
201 \par
202 \par
203 {\cf20 /*****************************************************************************}\par
204 {\cf20 * Function Prototypes}\par
205 {\cf20 *****************************************************************************/}\par
206 {\cf21 #ifdef __cplusplus}\par
207 {\cf17 extern} {\cf22 "C"}\{\par
208 {\cf21 #endif}\par
209 \par
210 {\cf17 const} DioConfig_t * {\cf17 const} DIO_configGet({\cf18 void});\par
211 {\cf18 size_t} DIO_configSizeGet({\cf18 void});\par
212 \par
213 {\cf21 #ifdef __cplusplus}\par
214 \} {\cf20 //extern "C"}\par
215 {\cf21 #endif}\par
216 \par
217 {\cf21 #endif }{\cf20 /*DIO_H_*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio.c}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio.c}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The implementation for the DIO driver. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dio.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dio.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_init} (const {\b DioConfig_t} *const Config, size_t configSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DioPinState_t} {\b DIO_pinRead} (const {\b DioPinConfig_t} *const PinConfig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_pinWrite} (const {\b DioPinConfig_t} *const PinConfig, {\b DioPinState_t} State)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_pinToggle} (const {\b DioPinConfig_t} *const PinConfig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DIO_registerWrite} (uint32_t address, uint32_t value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b DIO_registerRead} (uint32_t address)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The implementation for the DIO driver. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jose Luis Figueroa \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025-03-11\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright (c) 2025 Jose Luis Figueroa. MIT License. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DIO_init\:dio.c}
{\xe \v dio.c\:DIO_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_init (const {\b DioConfig_t} *const Config, size_t configSize)}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to initialize the DIO based on the configuration \par
 table defined in dio_cfg module.\par
PRE-CONDITION: The MCU clocks must be configured and enabled. \par
 PRE-CONDITION: Configuration table needs to be populated (sizeof > 0) \par
 PRE-CONDITION: NUMBER_OF_PORTS > 0 \par
 PRE-CONDITION: The setting is within the maximum values (DIO_MAX). \par
POST-CONDITION: The DIO peripheral is set up with the configuration settings.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i Config} \cell }{is a pointer to the configuration table that contains the initialization for the peripheral. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i configSize} \cell }{is the size of the configuration table.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_ConfigType_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinRead\:dio.c}
{\xe \v dio.c\:DIO_pinRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DioPinState_t} DIO_pinRead (const {\b DioPinConfig_t} *const PinConfig)}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to reads the state of a specified pin. This function reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure, which contains the port and pin information.\par
PRE-CONDITION: The pin is configured as INPUT \par
 PRE-CONDITION: The pin is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. definition. \par
POST-CONDITION: The channel state is returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i PinConfig} \cell }{A pointer to a structure containing the port and pin to be read.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DioPinState_t} The state of the pin (high or low).\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserButton1= \par
\{\par
     .Port = DIO_PC, \par
     .Pin = DIO_PC13\par
\};\par
 {\cf18 bool} pin = DIO_pinRead(&UserButton1);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinToggle\:dio.c}
{\xe \v dio.c\:DIO_pinToggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_pinToggle (const {\b DioPinConfig_t} *const PinConfig)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to toggle the current state of a pin. This function reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure, which contains the port and pin information.\par
PRE-CONDITION: The channel is configured as output \par
 PRE-CONDITION: The channel is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. \par
POST-CONDITION: The channel state is toggled. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pinConfig} \cell }{A pointer to a structure containing the port and pin to be toggled.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserLED1= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA5\par
\};\par
DIO_pinToggle(&UserLED1);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_pinWrite\:dio.c}
{\xe \v dio.c\:DIO_pinWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_pinWrite (const {\b DioPinConfig_t} *const PinConfig, {\b DioPinState_t} State)}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to write the state of a pin as either logic high or low. it reads the state of a digital input/output pin specified by the {\b DioPinConfig_t} structure and the {\b DioPinState_t} to define the desired state, which contains the port and pin information.\par
PRE-CONDITION: The pin is configured as OUTPUT \par
 PRE-CONDITION: The pin is configured as GPIO \par
 PRE-CONDITION: {\b DioPinConfig_t} needs to be populated (sizeof > 0) \par
 PRE-CONDITION: The Port is within the maximum {\b DioPort_t}. \par
 PRE-CONDITION: The Pin is within the maximum {\b DioPin_t}. \par
 PRE-CONDITION: The State is within the maximum {\b DioPinState_t}. \par
POST-CONDITION: The channel state is Stated. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pinConfig} \cell }{A pointer to a structure containing the port and pin to be written. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i State} \cell }{is HIGH or LOW as defined in the {\b DioPinState_t} enum.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} DioPinConfig_t  UserLED1= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA5\par
\};\par
{\cf17 const} DioPinConfig_t  UserLED2= \par
\{\par
     .Port = DIO_PA, \par
     .Pin = DIO_PA6\par
\};\par
DIO_pinWrite(&UserLED1, LOW);    {\cf20 //Set the pin low}\par
DIO_pinWrite(&UserLED2, HIGH);   {\cf20 //Set the pin high}\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_registerRead\:dio.c}
{\xe \v dio.c\:DIO_registerRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t DIO_registerRead (uint32_t address)}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to directly address a Dio register. The function should be used to access specialized functionality in the Dio peripheral that is not exposed by any other function of the interface.\par
PRE-CONDITION: Address is within the boundaries of the Dio register address space. \par
POST-CONDITION: The value stored in the register is returned to the caller. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{is the address of the Dio register to read.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The current value of the Dio register.\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid type dioValue = DIO_registerRead(0x1000);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_registerWrite\:dio.c}
{\xe \v dio.c\:DIO_registerWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DIO_registerWrite (uint32_t address, uint32_t value)}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to directly address and modify a GPIO register. The function should be used to access specialized functionality in the DIO peripheral that is not exposed by any other function of the interface.\par
PRE-CONDITION: Address is within the boundaries of the DIO register address space. \par
POST-CONDITION: The register located at address with be updated with value. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{is a register address within the DIO peripheral map. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{is the value to set the DIO register.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void\par
}}{\b Example}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid DIO_registerWrite(0x1000, 0x15);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
DIO_ConfigGet \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
{\b DIO_pinRead} \par
{\b DIO_pinWrite} \par
{\b DIO_pinToggle} \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio_cfg.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio_cfg.c}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/dio_cfg.c}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains the implementation for the digital input/output peripheral configuration. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dio_cfg.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dio_cfg.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dio__cfg_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b DioConfig_t} *const {\b DIO_configGet} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b DIO_configSizeGet} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b DioConfig_t} {\b DioConfig} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This module contains the implementation for the digital input/output peripheral configuration. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jose Luis Figueroa \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025-03-04\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright (c) 2023 Jose Luis Figueroa. MIT License. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DIO_configGet\:dio_cfg.c}
{\xe \v dio_cfg.c\:DIO_configGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b DioConfig_t} *const DIO_configGet (void )}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to initialize the DIO based on the configuration table defined in dio_cfg module.\par
PRE-CONDITION: configuration table needs to be populated (sizeof > 0) \par
POST-CONDITION: A constant pointer to the first member of the \par
 configuration table will be returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the configuration table. \par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_Config_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
DIO_channelRead \par
DIO_channelWrite \par
DIO_channelToggle \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\xe \v DIO_configSizeGet\:dio_cfg.c}
{\xe \v dio_cfg.c\:DIO_configSizeGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t DIO_configSizeGet (void )}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Description:}  This function is used to get the size of the configuration table.\par
PRE-CONDITION: configuration table needs to be populated (sizeof > 0) \par
POST-CONDITION: The size of the configuration table will be returned. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The size of the configuration table.\par
}}{\b Example:}  {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 const} Dio_Config_t * {\cf17 const} DioConfig = DIO_configGet();\par
{\cf18 size_t} configSize = DIO_configSizeGet();\par
\par
DIO_Init(DioConfig, configSize);\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b DIO_configGet} \par
{\b DIO_configSizeGet} \par
{\b DIO_init} \par
DIO_channelRead \par
DIO_channelWrite \par
DIO_channelToggle \par
{\b DIO_registerWrite} \par
{\b DIO_registerRead} \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v DioConfig\:dio_cfg.c}
{\xe \v dio_cfg.c\:DioConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b DioConfig_t} DioConfig[]}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \par
\{\par
\par
   \{DIO_PA, DIO_PA0, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PA, DIO_PA1, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PA, DIO_PA2, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PA, DIO_PA3, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PA, DIO_PA4, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PA, DIO_PA5, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PB, DIO_PB0, DIO_OUTPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
   \{DIO_PC, DIO_PC13, DIO_INPUT, DIO_PUSH_PULL, DIO_LOW_SPEED, DIO_NO_RESISTOR, DIO_AF0\},\par
\}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The following array contains the configuration data for each digital input/output peripheral channel (pin). Each row represent a single pin. Each column is representing a member of the {\b DioConfig_t} structure. This table is read in by Dio_Init, where each channel is then set up based on this table. The NUMBER_DIGITAL_PINS constant should be accorded with the number of rows. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/main.c}
{\xe \v C:/Users/User/OneDrive/Documents/1.Repositories/EmbeddedSystems/STM32/Reusable-Drivers/DIO/src/main.c}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement the DIO driver. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "dio.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b main} (){\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement the DIO driver. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jose Luis Figueroa \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2025-03-04 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright (c) 2023 Jose Luis Figueroa. MIT License. \par
}}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
